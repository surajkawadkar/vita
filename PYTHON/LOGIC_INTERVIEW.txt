Q1 1.	Swap 2 variable without using 3rd variable. (Give minimum three solutions)

a,b=map(int,input('enter 2 number').split())
a,b=b,a
print(a,b)

solution 2
a,b=map(int,input('enter 2 number').split())
a=a+b
b=a-b
a=a-b
print(a,b)


solution 3:
a,b=map(int,input('enter 2 number').split())
a=a*b
b=a/b
a=a/b
print(a,b)


####################################################################
Q 2: 2.	Accept the marks from the user and print the corresponding grade
	a.	Marks>=75	grade A
	b.	Marks >=55  grade B
	c.  Marks >=35	grade C
	d.	Else fail


solution: 
marks=int(input("enter marks"))
if marks>=75:
  print("Grade A")
elif marks>=55:
  print("Grade B")
elif marks>=35:
  print("Grade C")
else:
  print("Fail")



#########################################################
Q3.
3.	Accept a number from the user - if it is divisible by 3 print "Three" ,
 if it is divisible by 7 print "Seven" and 
if it is divisible by both 3 & 7, print ''Three - Seven".




solution:
num= int(input("Enter the number"))
if num% 3==0 and num %7==0:
  print("Theree and seven")
elif num% 3==0:
  print("Theree") 
elif num %7==0:
  print(" seven")
else:
  print("neither Three nor seven")


##############################################################
Q 4.

4.	Accept a number from the user and check if it is odd or even number
 (Hint: use % operator).

solution
def even_odd(num):
  if num%2==0:
    print("even")
  else:
    print("odd")
number=int(input("enter the number"))
even_odd(number)

#####################################################################
5.	Accept a number from the user check if it is odd or even number (Do not use % operator).

idea:
 input : 5    // odd
   00000101              
 & 00000001                
--------------                
   00000001       
--------------

input : 8     //even
   00001000              
 & 00000001                 
--------------               
   00000000 


solution: using biwise oprator 

def even_odd(n):
  return (n&1)

num=int(input("enter the number"))
if (even_odd(num)==0):
  print("even")
else:
  print('odd')

#####################################################
Q6.
6.Accept principal amount, rate of interest and years of investment then find the simple interest

solution:
def simpleInterest(amt,ror,yr):
  return amt*ror*yr/100
amt,ror,yr= map(float,input("enter amount and rate of interest and years").split())
print(simpleInterest(amt,ror,yr))


####################################################################

# 7.	Problem:Given the length of four sides of a figure, determine whether they can be used to create a polygon and determine if that polygon is a square. A polygon can be created if no single side is greater than the sum of the other three sides. Display a ONE when the status (for polygon or square) is confirmed and ZERO when the status cannot be confirmed.
# Examp le Execution #1:
# Enter the length of the four sides:4 3 2 9 Length of sides: 4,3, 2, 9
# Polygon status: 1 Square status: O

# Example Execution #2:
# Enter the length of the four sides: 5 5 5 5
# Length of sides: 5, 5, 5, 5
# Polygon status: 1 Square status: 1

# Example Execution #3:
# Enter the length of the four sides: 84 25 20 15
# Length of sides: 84, 25, 20, 15 Polygon status: O
# Square status: O

def polygon_status(list1):
  
  s1=list1[0]; s2=list1[1]; s3=list1[2];s4=list1[3];
  status_poly=0
  status_square=0
  max_num=max(list1)
  list1.remove(max_num)
  sum1=sum(list1)

  
  if s1==s2 and s2==s3 and s3==s4:
    status_square=1
    status_poly=1
    print("status_poly {}, status_square{}".format(status_poly,status_square))

  elif max_num<sum1:
    status_poly=1
    print("status_poly {}, status_square{}".format(status_poly,status_square))



  else:

     print("status_poly {}, status_square{}".format(status_poly,status_square))


  



list1=[]
for i in range(4):
  x=int(input())
  list1.append(x)
print(list1)
print(polygon_status(list1))  
############################################################

# 8.	Accept 10 numbers from the user and calculate their sum. (Do not use array).

solution:
sum=0
for i in range(10):
  x= int(input('enter the number'))
  sum+=x
print('total='sum)

################################################
# 9.	Accept a number from the user and find the factorial of the number.
num= int(input('enter the number'))
fact=1
while(num>1):
  fact=fact*num
  num-=1
print(fact)
##############################################################

# 10.	Accept 10 numbers from the user and count how many are positive, negative or zero. 

solution:

neg=0
pos=0
zero=0
for i in range(10):
  x=int(input())
  if x>0:
    pos+=1
  elif x<0:
    neg+=1
  else:
    zero+=1
print("positives negatices and zeros are"pos,neg,zero)

################################################################
# 11. Accept a number from the user and calculate the sum of the digits of the number.

solution:

num=int(input("enter the number"))
sum=0
while(num>0):
  rem=num%10
  sum+=rem
  num=num//10
print(sum)

######################################################################
# 12.	Accept a number from the user and reverse it. Accept a number from the user and 
# check if it is palindrome number or not.

solution:

rev=0
num= int(input("wnter the number"))
origional_num=num
while(num>0):
  rem=num%10
  rev=rev*10+rem
  num=num//10


print(rev)


if rev==origional_num:
  print('palindrome number')
else:
  print("not palindrome")
####################################################################
# 13.	Accept a number from the user and print a table for that number.

solution:

num= int(input('num'))
i=1
while(i<11):
  print(i*num)
  i+=1
#################################################################
# 14.	Accept a number from the user check if it is special number or not?
# Example: 145
# 1! =1
# 4!=1*2*3*4 
# 5!=1*2*3*4*5
# Sum of the factorials is (1+24+120=145)

solution:

def fact_num(n):
  fact=1
  while n>0:
    fact=fact*n  
    n-=1
  return fact
def split_num(num):
  total=0
  while num>0:
    
    rem=num%10
    num=num//10
    total+=fact_num(rem)
  return total


num = int(input("enter the number"))

print(split_num(num))
special_no=split_num(num)

if special_no==num:
  print('special number')
else:
  print("not special number")

#########################################################################

# 15.	Accept a number from the user and check if it is an Armstrong number or not?
# Example: 153
# 1cube =1
# 5 cube= 125
# 3 cube = 27
# Sum of the cubes is (1+27+125=153)

solution:

def armstrong(num):
  total=0
  while(num>0):

    rem=num%10
    total=total+rem**3
    num=num//10
  return total


number= int(input("enter the number to be chhecked"))
print("number becomes ",armstrong(number))

arms_no=armstrong(number)
if arms_no==number:
  print("armstrong number")
else:
  print("not an armstrong number")


#############################################################
# 16.	Go on accepting numbers from the user till the user enters O and calculate the sum of these numbers. 

solution:

sum=0
while(1):
  num=int(input('enter the number'))
  if num==0:
    break
  else:
    sum+=num
print('total=',sum)

####################################################################

# 17. Accept a number from the user and print the next 5 numbers.

solution:
number= int(input("enter the number"))
for i in range(1,6):
  print(number+i)

####################################################################
# 18.	Accept a number from the user and print those many numbers after the number

solution:
number= int(input("enter the number"))
i=1
while number>=i:

  print(i,end=', ')
  i+=1
####################################################################
# 19.	Accept a start and end range from the user and print all even number between them. (Give minimum two solutions).

solution 1:
for i in range(2,20,2):
  print(i)

solution 2:
for i in range(2,20,2):
  if i%2==0:
    print(i)

####################################################################
# 20.	Accept start and end range from the user and print all odd numbers between them. (Give minimum two solutions).

solution 1:
for i in range(1,20,2):
  print(i)

solution 2
for i in range(2,20,2):
  if i%2==1:
    print(i)

####################################################################
# 21.	Accept a number from the user and print the Fibonacci series till that number.

# 0,1,1,2,3,5,8,13,


solution:
nterm=int(input("enter the nth number till you wish to print fibb series"))

n1=0
n2=1
count=0
while (count<nterm):
  nth=n1+n2
  print(n1,end=',')
  # updates
  n1=n2
  n2=nth
  count+=1

##################################################
Q 22.	Accept a number and a single digit from the user. Then check the number of occurrences of that digit in the number.

solution 1:
number= int(input("enter a number r"))
n_check = int(input("single digit no"))
count=0
while number>0:
  if number%10 ==n_check:
    count+=1
  number = number//10
print(count)

solution 2:
arr=[int(i) for i in str(number) ]
print(arr.count(n_check)) 
####################################################################
# 23.	Accept 10 numbers from the user and print the highest number.

solution:
high=0
for i in range(10):
  num= int(input())
  if high<num:
    high=num
  else:
    continue
print('max value is',high)

solution 2:
list1=[]
for i in range(10):
  x= int(input("enter number"))
  list1.append(x)
print(max(list1))

#####################################################################
# 24.	Accept 10 numbers from the user and print the lowest number.

solution:
list1=[]
for i in range(10):
  x= int(input("enter number"))
  list1.append(x)
print(min(list1))

#######################################################

# 25.	Accept 10 numbers from the user and print the highest and the 2nd highest number.
solution:
list2=[]
for i in range(10):
  x=int(input("enter the number"))
  list2.append(x)
print(list2)
list2.sort(reverse=True) 
#NOTE sort modify the existing array sorted return new array
print("second highest is",list2[1])

#####################################################################
# 26.	Write a program to print every integer between 1and n divisible by m. 
# Also report whether the number that is divisible by m is even or odd.

solution:
num= int(input("enter the number"))
m= int(input("enter the number from  which check disisibiliy"))
start=1


while start<num:
  if start%m==0:
    if start%2==0:
      print(start,"\t even")
    else:
      print(start,"\t odd")
    start+=1
  else:
    start+=1

#########################################################################
# 27.	Print all special numbers between 1to 200000.

solution:
def factorial(num):
  fact=1
  while num>0:
    fact*=num
    num-=1
  return fact


def split(n):
  total=0
  while n>0:
    rem=n%10
    total+=factorial(rem)
    n=n//10
  return total

for i in range(2000):
  if split(i)==i:
    print(i,end=', ')  
#########################################################################
# 28.	Print all Armstrong number between 1to 200000.

solution:
def armstrong(n):
  total=0
  while n>0:
    rem=n%10
    total+=rem**3
    n=n//10
  return total



for i in range(2000):
  if i==armstrong(i):
    print(i,end=', ')

######################################################################
# 29.	Accept a number from the user and check if it is a prime number or not.

solution:
def prime(n):
  i=2
  while(i<n):
    if n%i==0:
      flag=0
      return flag
    else:
      flag=1
      return flag
number=int(input("enter the number"))
flag=prime(number)
if flag==1:
  print("prime no")
else:
  print("non prime no")

##################################################################